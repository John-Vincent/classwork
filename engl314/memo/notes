\indent When working in a team it is critically important for engineers to write code that
other people the team can easily understand and use. The most effective way to make sure
that others can use code you create, regardless of its complexity, is to properly comment it.
When it comes to comments uniformity can allow for users to more quickly find the information
they are looking for. However choosing the right style of comment can require some thought.

\indent The proper comment style to use can depend on a few things. First many large
companies, like google, will issue a style guide(see link 1). These documents specify
how everything should be formatted, and can include sections on how the company wants
their code commented. Using the company style is always the best option because people
in the company will be accustomed to reading this type of comment and will allow co workers
to more quickly read, and understand your code. If there is no defined style guide, many
languages have a standard comment style defined by its community.

\indent The information a user needs in order to make use of some code largely depends
on the langauge being used. So when trying to find a style to use it's always useful
to look a the community behind the language. For example most java programmers use
a style of comment called javadoc(see link 2) because it more clearly identifies the important
aspects of the code that another user must interact with. People in the Perl community
on the other hand would rather use POD(see link 3) commenting because it caters to perls more
loose nature. An added benefit of using these language specific documentation styles is that
many of them have tools that will generate a set of static webpages for the project, allowing
users to have a clean, abstracted interface to reference when using the code. An example of
a website generated using javadoc would be Apache's dbcp(see link 4) which is an all generated by
the javadoc program.
